package readme

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"strings"

	"github.com/openset/leetcode/internal/base"
	"github.com/openset/leetcode/internal/leetcode"
)

var CmdReadme = &base.Command{
	Run:       runReadme,
	UsageLine: "readme",
	Short:     "build README.md file",
	Long:      "build README.md file.",
}

func runReadme(cmd *base.Command, args []string) {
	if len(args) != 0 {
		cmd.Usage()
	}
	var wb bytes.Buffer
	wb.WriteString(defaultStr)
	writeProblems(&wb)
	err := ioutil.WriteFile("README.md", wb.Bytes(), 0644)
	base.CheckErr(err)
}

func writeProblems(wb *bytes.Buffer) {
	problems := leetcode.ProblemsAll()
	problemsSet := make(map[int]string)
	maxId := 0
	for _, problem := range problems.StatStatusPairs {
		id := problem.Stat.FrontendQuestionId
		title := strings.TrimSpace(problem.Stat.QuestionTitle)
		needPaid := ""
		if problem.PaidOnly {
			needPaid += " ðŸ”’"
		}
		slug := problem.Stat.QuestionTitleSlug
		levelName := problem.Difficulty.LevelName()
		format := "| <span id=\"%d\">%d</span> | [%s](https://leetcode.com/problems/%s)%s | [Go](https://github.com/openset/leetcode/tree/master/solution/%s) | %s |\n"
		problemsSet[id] = fmt.Sprintf(format, id, id, title, slug, needPaid, slug, levelName)
		if id > maxId {
			maxId = id
		}
	}
	rowLong := 300
	for i := 1; i < maxId; i += rowLong {
		f, a, s := navigation(i, 50, rowLong)
		wb.WriteString(fmt.Sprintf(f, a...))
		wb.WriteString(s)
	}

	wb.WriteString("\n")
	wb.WriteString("| # | Title | Solution | Difficulty |\n")
	wb.WriteString("| :-: | - | - | :-: |\n")
	for i := 0; i <= maxId; i++ {
		if row, ok := problemsSet[i]; ok {
			wb.WriteString(row)
		}
	}
}

func navigation(i, step, long int) (f string, a []interface{}, s string) {
	f, s = "| ", "| "
	l := long / step
	for c := 0; c < l; c++ {
		f += " [[%d-%d]](#%d) |"
		a = append(a, i, i+step-1, i)
		i += step
		s += " :-: |"
	}
	f += "\n"
	s += "\n\n"
	return
}

const defaultStr = `<!--This file generated by command(leetcode readme); DO NOT EDIT.-->

# [LeetCode](https://openset.github.io/leetcode)
LeetCode Problems' Solutions

[![Build Status](https://travis-ci.org/openset/leetcode.svg?branch=master)](https://travis-ci.org/openset/leetcode)
[![codecov](https://codecov.io/gh/openset/leetcode/branch/master/graph/badge.svg)](https://codecov.io/gh/openset/leetcode)
[![Go Report Card](https://goreportcard.com/badge/github.com/openset/leetcode)](https://goreportcard.com/report/github.com/openset/leetcode)
[![GitHub contributors](https://img.shields.io/github/contributors/openset/leetcode.svg)](https://github.com/openset/leetcode/graphs/contributors)
[![license](https://img.shields.io/github/license/openset/leetcode.svg)](https://github.com/openset/leetcode/blob/master/LICENSE)
[![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/openset/leetcode.svg?colorB=green)](https://github.com/openset/leetcode/archive/master.zip)

`
