package tag

import (
	"bytes"
	"fmt"

	"github.com/openset/leetcode/internal/base"
	"github.com/openset/leetcode/internal/leetcode"
)

var CmdTag = &base.Command{
	Run:       runTag,
	UsageLine: "tag",
	Short:     "build all tags file",
	Long:      "build all tags README.md file.",
}

func runTag(cmd *base.Command, args []string) {
	if len(args) != 0 {
		cmd.Usage()
	}
	var buf bytes.Buffer
	buf.WriteString("<!--|This file generated by command(leetcode tag); DO NOT EDIT.            |-->")
	buf.WriteString(base.AuthInfo)
	buf.WriteString("\n## 话题分类\n\n")
	buf.WriteString("| # | Title | 标题 | | # | Title | 标题 |\n")
	buf.WriteString("| :-: | - | :-: | - | :-: | - | :-: |\n")
	tags := leetcode.GetTags()
	format := "| %d | [%s](https://github.com/openset/leetcode/tree/master/tag/%s) | [%s](https://github.com/openset/leetcode/tree/master/tag/%s) | "
	for i, tag := range tags {
		buf.WriteString(fmt.Sprintf(format, i+1, tag.Name, tag.Slug, tag.TranslatedName, tag.Slug))
		if i&1 == 1 {
			buf.WriteString("\n")
		}
		tag.SaveContents()
	}
	base.FilePutContents("tag/README.md", buf.Bytes())
}
